% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/render_map.R
\name{render_map}
\alias{render_map}
\title{Plot leaflet choropleth}
\usage{
render_map(
  df,
  x,
  map,
  date = NULL,
  id_label = 1,
  info_labels = x,
  palette = NULL,
  collapse_controls = FALSE,
  legend = TRUE,
  legend_position = "bottomright",
  crosstalk = FALSE,
  crosstalk_key = NULL,
  crosstalk_group = NULL,
  ...
)
}
\arguments{
\item{df}{\code{dataframe / tibble / datatable} Dataset of values for the choropleth.}

\item{x}{\code{list} Named list where keys are the columns of \code{df} to plot and the values are the
names to be used as the layer and legend titles.}

\item{map}{\code{sf} A simple features dataset containing GIS data to join with df.}

\item{date}{\code{date} Date to be plotted. If NULL, the most recent available date is used. Default
is NULL.}

\item{id_label}{\code{chr} Column name in \code{df} to use as the shape name in the tooltip.}

\item{info_labels}{\code{list} Named list corresponding to the \code{df} columns (keys) and desired label
text (values) to appear in the tooltip. By default, the list \code{x} will be used.}

\item{palette}{\code{list} List of palettes to be used for the respective variables in x. The list
can be named to match the keys of x, if not the palettes will be taken in order. Palettes
should be a general palette name (eg: 'Blues'). In the case of factor variables, a vector
of specific colors can be given instead. \strong{Note}: for factor variables, the variable itself
must already be ordered in \code{df}, otherwise the factors will be ordered by appearance. If no
palette is provided, 'Blues' will be used for every layer.}

\item{collapse_controls}{\code{bool} If True and if more than one layer is present (ie, if
\code{length(x) > 1}), then the layer control in the top right corner will be collapsed. Default is
TRUE.}

\item{legend}{\code{bool} If True, the legend will be shown in the bottom right corner. Default is
TRUE.}

\item{legend_position}{\code{chr} The desired position of the legend. Default is 'bottomright'.}

\item{crosstalk}{\code{bool} If TRUE, the map data created and used will be converted into a
\href{https://rstudio.github.io/crosstalk/}{crosstalk} \code{SharedData} object. \strong{Note:} enabling
crosstalk is mutually exclusive to other aspects of \code{render_map}, in particular it cannot be
used on maps with multiple layers. Default is
FALSE.}

\item{crosstalk_key}{\code{chr} If crosstalk is TRUE, \code{crosstalk_key} allows you to optionally
specify which column in \code{df} to use as the key for the SharedData. Default is NULL, meaning
no key will be specified.}

\item{crosstalk_group}{\code{chr} If \code{crosstalk} is TRUE, \code{crosstalk_group} allows you to specify the
group id name provided to \code{SharedData}. Default is NULL, meaning a random group name will be
generated by crosstalk.}

\item{...}{Additional arguments to be passed to \code{\link[=make_leaflet_labels]{make_leaflet_labels()}}}
}
\value{
\verb{leaflet widget}
}
\description{
Plot interactive choropleth using leaflet with a simplified theme designed for
improved appearance in the absence of background tiles. The theme requires pitoolbox to be
installed locally. \strong{NOTE}: if you would like to use the embedded \code{crosstalk} functionality of
\code{\link[=render_map]{render_map()}},
\href{https://github.com/rstudio/leaflet/pull/499}{you \emph{must} install a patched version of leaflet}
from github: \code{devtools::install_github("dmurdoch/leaflet@crosstalk4")}. If you do not want to
install this version, the \code{crosstalk} behavior will silently fail but your code will otherwise
run just fine.
}
\examples{
\dontrun{
library(dplyr)

df_dep \%>\%
  group_by(dep) \%>\%
  mutate(p_evo = evolution(p)) \%>\%
  ungroup() \%>\%
  render_map(x = c(p = 'Cases',
                   pop = 'Population'),
             id_label = 'dep',
             evolution = c('p'))
} 

}
