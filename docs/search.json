[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Catherine Eisenhauer Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Catherine Eisenhauer. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Eisenhauer C (2022). epiboards: epiboards. R package version 0.0.0.9000.","code":"@Manual{,   title = {epiboards: epiboards},   author = {Catherine Eisenhauer},   year = {2022},   note = {R package version 0.0.0.9000}, }"},{"path":[]},{"path":"/index.html","id":"tldr","dir":"","previous_headings":"","what":"tldr.","title":"epiboards","text":"epiboards facilitates rapid construction Rmd style dashboards interactive widgets. aimed epidemiologists hope reducing logistical burden normally associated making sitreps interactive / automated reports.","code":""},{"path":"/reference/e_grid_titles.html","id":null,"dir":"Reference","previous_headings":"","what":"Titles for Echarts grid — e_grid_titles","title":"Titles for Echarts grid — e_grid_titles","text":"Adds titles echart subplots built using grid (example echarts4r::e_facet(). Note: function work grids specified entirely percent entirely pixels . work grids using mix pixels percent. TODO: need make work pixels.","code":""},{"path":"/reference/e_grid_titles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Titles for Echarts grid — e_grid_titles","text":"","code":"e_grid_titles(e, titles, top_space = 2)"},{"path":"/reference/e_grid_titles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Titles for Echarts grid — e_grid_titles","text":"e echart Chart modified. titles vector / list Names used. Note: e_grid_titles() use order titles assign titles along grid (left right, top bottom). , made facet plot using charcter grouping variable, probably need sort titles alphabetically order match grid. top_space int far plot title placed. units top_space (percent vs pixels) determined automatically match units used specification grid. Default value 2.","code":""},{"path":"/reference/e_grid_titles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Titles for Echarts grid — e_grid_titles","text":"","code":"groups <- 6 observations <- 10 df <- data.frame(x = rep(1:observations,                          times = groups),                  y = runif(groups * observations, 0, 1),                  group = rep(paste('Group', 1:6), each = observations))  df %>%   dplyr::group_by(group) %>%   echarts4r::e_charts(x) %>%   echarts4r::e_bar(y,                    name = 'Outcome') %>%   echarts4r::e_facet(rows = 2,                      cols = 3,                      legend_space = 5) %>%   e_grid_titles(titles = unique(df$group))  {\"x\":{\"theme\":\"\",\"tl\":false,\"draw\":true,\"renderer\":\"canvas\",\"events\":[],\"buttons\":[],\"opts\":{\"yAxis\":[{\"show\":true,\"gridIndex\":0},{\"show\":true,\"gridIndex\":1},{\"show\":true,\"gridIndex\":2},{\"show\":true,\"gridIndex\":3},{\"show\":true,\"gridIndex\":4},{\"show\":true,\"gridIndex\":5}],\"xAxis\":[{\"type\":\"value\",\"gridIndex\":0},{\"type\":\"value\",\"gridIndex\":1},{\"type\":\"value\",\"gridIndex\":2},{\"type\":\"value\",\"gridIndex\":3},{\"type\":\"value\",\"gridIndex\":4},{\"type\":\"value\",\"gridIndex\":5}],\"legend\":{\"data\":[\"Outcome\",\"Outcome\",\"Outcome\",\"Outcome\",\"Outcome\",\"Outcome\"]},\"series\":[{\"data\":[{\"value\":[1,0.0953344081062824]},{\"value\":[2,0.768472983967513]},{\"value\":[3,0.231555220670998]},{\"value\":[4,0.490084781311452]},{\"value\":[5,0.941564355744049]},{\"value\":[6,0.677396527025849]},{\"value\":[7,0.533281042007729]},{\"value\":[8,0.813877801876515]},{\"value\":[9,0.272256919648498]},{\"value\":[10,0.509219755185768]}],\"name\":\"Outcome\",\"type\":\"bar\",\"yAxisIndex\":0,\"xAxisIndex\":0,\"coordinateSystem\":\"cartesian2d\"},{\"data\":[{\"value\":[1,0.562581712845713]},{\"value\":[2,0.963993508368731]},{\"value\":[3,0.143432242795825]},{\"value\":[4,0.798907529329881]},{\"value\":[5,0.230947382049635]},{\"value\":[6,0.190826580859721]},{\"value\":[7,0.877060261555016]},{\"value\":[8,0.958513302495703]},{\"value\":[9,0.505032686516643]},{\"value\":[10,0.905646621948108]}],\"name\":\"Outcome\",\"type\":\"bar\",\"yAxisIndex\":1,\"xAxisIndex\":1,\"coordinateSystem\":\"cartesian2d\"},{\"data\":[{\"value\":[1,0.308696759399027]},{\"value\":[2,0.821256993105635]},{\"value\":[3,0.720248154597357]},{\"value\":[4,0.546478923410177]},{\"value\":[5,0.306600690120831]},{\"value\":[6,0.319800046039745]},{\"value\":[7,0.831819097977132]},{\"value\":[8,0.488188777118921]},{\"value\":[9,0.0547101877164096]},{\"value\":[10,0.729493611492217]}],\"name\":\"Outcome\",\"type\":\"bar\",\"yAxisIndex\":2,\"xAxisIndex\":2,\"coordinateSystem\":\"cartesian2d\"},{\"data\":[{\"value\":[1,0.894259178778157]},{\"value\":[2,0.855743029620498]},{\"value\":[3,0.586080222856253]},{\"value\":[4,0.264952727593482]},{\"value\":[5,0.987139960052446]},{\"value\":[6,0.366433966672048]},{\"value\":[7,0.545430535916239]},{\"value\":[8,0.819163935724646]},{\"value\":[9,0.956312786322087]},{\"value\":[10,0.173852491658181]}],\"name\":\"Outcome\",\"type\":\"bar\",\"yAxisIndex\":3,\"xAxisIndex\":3,\"coordinateSystem\":\"cartesian2d\"},{\"data\":[{\"value\":[1,0.885050360811874]},{\"value\":[2,0.0737740909680724]},{\"value\":[3,0.427714398829266]},{\"value\":[4,0.554970216471702]},{\"value\":[5,0.0950709304306656]},{\"value\":[6,0.743785007856786]},{\"value\":[7,0.97656259033829]},{\"value\":[8,0.841762486146763]},{\"value\":[9,0.873681246303022]},{\"value\":[10,0.308629125356674]}],\"name\":\"Outcome\",\"type\":\"bar\",\"yAxisIndex\":4,\"xAxisIndex\":4,\"coordinateSystem\":\"cartesian2d\"},{\"data\":[{\"value\":[1,0.535112309968099]},{\"value\":[2,0.568024242063984]},{\"value\":[3,0.268460895633325]},{\"value\":[4,0.905378224560991]},{\"value\":[5,0.872940115164965]},{\"value\":[6,0.528608963126317]},{\"value\":[7,0.3685384595301]},{\"value\":[8,0.822516072774306]},{\"value\":[9,0.167933497112244]},{\"value\":[10,0.445329499430954]}],\"name\":\"Outcome\",\"type\":\"bar\",\"yAxisIndex\":5,\"xAxisIndex\":5,\"coordinateSystem\":\"cartesian2d\"}],\"grid\":[{\"height\":\"40%\",\"width\":\"26.3333333333333%\",\"top\":\"7%\",\"left\":\"5%\"},{\"height\":\"40%\",\"width\":\"26.3333333333333%\",\"top\":\"7%\",\"left\":\"38.3333333333333%\"},{\"height\":\"40%\",\"width\":\"26.3333333333333%\",\"top\":\"7%\",\"left\":\"71.6666666666667%\"},{\"height\":\"40%\",\"width\":\"26.3333333333333%\",\"top\":\"55%\",\"left\":\"5%\"},{\"height\":\"40%\",\"width\":\"26.3333333333333%\",\"top\":\"55%\",\"left\":\"38.3333333333333%\"},{\"height\":\"40%\",\"width\":\"26.3333333333333%\",\"top\":\"55%\",\"left\":\"71.6666666666667%\"}],\"title\":[{\"textAlign\":\"center\",\"left\":\"18.1666666666667%\",\"top\":\"5%\",\"text\":\"Group 1\"},{\"textAlign\":\"center\",\"left\":\"51.5%\",\"top\":\"5%\",\"text\":\"Group 2\"},{\"textAlign\":\"center\",\"left\":\"84.8333333333333%\",\"top\":\"5%\",\"text\":\"Group 3\"},{\"textAlign\":\"center\",\"left\":\"18.1666666666667%\",\"top\":\"53%\",\"text\":\"Group 4\"},{\"textAlign\":\"center\",\"left\":\"51.5%\",\"top\":\"53%\",\"text\":\"Group 5\"},{\"textAlign\":\"center\",\"left\":\"84.8333333333333%\",\"top\":\"53%\",\"text\":\"Group 6\"}]},\"dispose\":true},\"evals\":[],\"jsHooks\":[]}"},{"path":"/reference/make_leaflet_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Make leaflet tooltip labels — make_leaflet_labels","title":"Make leaflet tooltip labels — make_leaflet_labels","text":"Build html tooltip text.","code":""},{"path":"/reference/make_leaflet_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make leaflet tooltip labels — make_leaflet_labels","text":"","code":"make_leaflet_labels(   data,   id_label = 1,   info_labels,   decimals = 0,   percent = c(),   evolution = c(),   flip_colors = c() )"},{"path":"/reference/make_leaflet_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make leaflet tooltip labels — make_leaflet_labels","text":"data spatial polygon dataframe Merged map data. id_label chr Column name df use shape name tooltip. info_labels list Named list corresponding df columns (keys) desired label text (values) appear tooltip. default, list x used. decimals int Number decimal places shown. Passed tinker::french_format(). Default 0. percent chr vector Vector listing names variables info_labels displayed percents. Passed french_format(). Note french_format() assumes values proportions percents (ie, get 43%, must input 0.43 43). Default empty list. evolution chr vector Vector listing names variables info_labels evolution included tooltip. Warning, make_leaflet_labels() assumes evolutions already data column names conforming format name_evo. Default empty list. flip_colors chr vector Vector listing names variables info_labels default evolution colors inverted. Passed tinker::up_down_format(). Default empty list.","code":""},{"path":"/reference/make_leaflet_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make leaflet tooltip labels — make_leaflet_labels","text":"list","code":""},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/render_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot leaflet choropleth — render_map","title":"Plot leaflet choropleth — render_map","text":"Plot interactive choropleth using leaflet simplified theme designed improved appearance absence background tiles. theme requires pitoolbox installed locally. NOTE: like use embedded crosstalk functionality render_map(), must install patched version leaflet github: devtools::install_github(\"dmurdoch/leaflet@crosstalk4\"). want install version, crosstalk behavior silently fail code otherwise run just fine.","code":""},{"path":"/reference/render_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot leaflet choropleth — render_map","text":"","code":"render_map(   df,   x,   map,   date = NULL,   id_label = 1,   info_labels = x,   palette = NULL,   collapse_controls = FALSE,   legend = TRUE,   legend_position = \"bottomright\",   crosstalk = FALSE,   crosstalk_key = NULL,   crosstalk_group = NULL,   ... )"},{"path":"/reference/render_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot leaflet choropleth — render_map","text":"df dataframe / tibble / datatable Dataset values choropleth. x list Named list keys columns df plot values names used layer legend titles. map sf simple features dataset containing GIS data join df. date date Date plotted. NULL, recent available date used. Default NULL. id_label chr Column name df use shape name tooltip. info_labels list Named list corresponding df columns (keys) desired label text (values) appear tooltip. default, list x used. palette list List palettes used respective variables x. list can named match keys x, palettes taken order. Palettes general palette name (eg: 'Blues'). case factor variables, vector specific colors can given instead. Note: factor variables, variable must already ordered df, otherwise factors ordered appearance. palette provided, 'Blues' used every layer. collapse_controls bool True one layer present (ie, length(x) > 1), layer control top right corner collapsed. Default TRUE. legend bool True, legend shown bottom right corner. Default TRUE. legend_position chr desired position legend. Default 'bottomright'. crosstalk bool TRUE, map data created used converted crosstalk SharedData object. Note: enabling crosstalk mutually exclusive aspects render_map, particular used maps multiple layers. Default FALSE. crosstalk_key chr crosstalk TRUE, crosstalk_key allows optionally specify column df use key SharedData. Default NULL, meaning key specified. crosstalk_group chr crosstalk TRUE, crosstalk_group allows specify group id name provided SharedData. Default NULL, meaning random group name generated crosstalk. ... Additional arguments passed make_leaflet_labels()","code":""},{"path":"/reference/render_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot leaflet choropleth — render_map","text":"leaflet widget","code":""},{"path":"/reference/render_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot leaflet choropleth — render_map","text":"","code":"if (FALSE) { library(dplyr)  df_dep %>%   group_by(dep) %>%   mutate(p_evo = evolution(p)) %>%   ungroup() %>%   render_map(x = c(p = 'Cases',                    pop = 'Population'),              id_label = 'dep',              evolution = c('p')) }"}]
